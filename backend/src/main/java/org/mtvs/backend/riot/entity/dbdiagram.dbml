Table matches {
  match_id varchar [pk]
  game_duration bigint
  game_mode varchar
  game_version varchar
  queue_id int
  game_start_time datetime
}

Table champ {
  champ_id varchar [pk]
  champ_name_riot bigint
}

Table summoner_tag {
  puuid varchar [pk]
  riot_id_tagline varchar
  summoner_name varchar
}

Table participants {
  id bigint [pk, increment]
  match_id varchar [ref: > matches.match_id]
  participant_id int
  puuid varchar
  riot_id_game_name varchar
  riot_id_tagline varchar
  summoner_name varchar
  champion_name varchar
  kills int
  deaths int
  assists int
  total_damage_dealt_to_champions int
  total_damage_taken int
  vision_score int
  gold_earned int
  total_minions_killed int
  neutral_minions_killed int
  team_id int
  win boolean
}

Table match_timelines {
  id bigint [pk, increment]
  match_id varchar [ref: > matches.match_id]
  timestamp bigint
}

Table participant_frames {
  id bigint [pk, increment]
  timeline_id bigint [ref: > match_timelines.id]
  participant_id int
  total_gold int
  level int
  minions_killed int
  jungle_minions_killed int
  x int
  y int
}

Table match_events {
  id bigint [pk, increment]
  timeline_id bigint [ref: > match_timelines.id]
  type varchar
  timestamp bigint
  participant_id int
  killer_id int
  victim_id int
  monster_type varchar
  building_type varchar
  lane_type varchar
  tower_type varchar
  item_id int
}

Table event_assisting_participants {
  event_id bigint [ref: > match_events.id]
  participant_id int
  // Composite PK if needed: [event_id, participant_id]
}

// 신규 추가: AI 분석 결과 테이블
Table match_analysis {
  id bigint [pk, increment]
  puuid varchar [ref: > summoner_tag.puuid]
  match_id varchar [ref: > matches.match_id]
  target_player_name varchar
  target_champion varchar
  ai_request_data jsonb [note: 'AI 요청 데이터 (JSONB 형태)']
  ai_response_data jsonb [note: 'AI 응답 데이터 (JSONB 형태)']
  analysis_summary text [note: '분석 요약 텍스트']
  analysis_status varchar [note: 'REQUESTED/PROCESSING/COMPLETED/FAILED']
  created_at timestamp [default: `now()`]
  updated_at timestamp
  error_message text [note: '에러 발생시 메시지']
  
  indexes {
    (puuid, match_id) [unique, name: 'uk_match_analysis_puuid_match_id']
    puuid [name: 'idx_match_analysis_puuid']
    match_id [name: 'idx_match_analysis_match_id']
    analysis_status [name: 'idx_match_analysis_status']
    created_at [name: 'idx_match_analysis_created_at']
    target_champion [name: 'idx_match_analysis_target_champion']
  }
}

Ref: "champ"."champ_name_riot" < "participants"."champion_name"
Ref: "summoner_tag"."puuid" < "participants"."puuid"

// 새로운 관계: AI 분석과 매치/유저 연결
Ref: "summoner_tag"."puuid" < "match_analysis"."puuid"
Ref: "matches"."match_id" < "match_analysis"."match_id"
